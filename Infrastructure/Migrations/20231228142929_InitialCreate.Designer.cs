// <auto-generated />
using System;
using Infrastructure.MySQLDb;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(RealDatabase))]
    [Migration("20231228142929_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AnimalModelUser", b =>
                {
                    b.Property<Guid>("AnimalsId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UsersId")
                        .HasColumnType("char(36)");

                    b.HasKey("AnimalsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("AnimalModelUser");
                });

            modelBuilder.Entity("Domain.Models.Animal.AnimalModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("AnimalModel");

                    b.HasDiscriminator<string>("Discriminator").HasValue("AnimalModel");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8f640902-755f-4c9e-85a7-9767d9248158"),
                            Password = "Boss",
                            UserName = "Admin"
                        },
                        new
                        {
                            Id = new Guid("dc8235aa-0cae-4ab9-afb9-8866f7e1be2e"),
                            Password = "noob",
                            UserName = "noob"
                        });
                });

            modelBuilder.Entity("Domain.Models.Bird", b =>
                {
                    b.HasBaseType("Domain.Models.Animal.AnimalModel");

                    b.Property<bool>("CanFly")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasDiscriminator().HasValue("Bird");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c3bcf725-46d5-4e33-889d-f61ad77bcd82"),
                            Name = "Mitrovic",
                            CanFly = true,
                            Color = "White"
                        },
                        new
                        {
                            Id = new Guid("355bdbe2-faa4-4c28-bc5d-52076c3fa7ed"),
                            Name = "Klose",
                            CanFly = false,
                            Color = "Red"
                        },
                        new
                        {
                            Id = new Guid("8641b26d-f4c0-493e-8536-dcfd02cec812"),
                            Name = "Gomez",
                            CanFly = true,
                            Color = "Blue"
                        });
                });

            modelBuilder.Entity("Domain.Models.Cat", b =>
                {
                    b.HasBaseType("Domain.Models.Animal.AnimalModel");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("LikesToPlay")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Cat");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fd494355-d59f-4386-b336-bbca8533ac6e"),
                            Name = "Cambiasso",
                            Breed = "Maine Coon",
                            LikesToPlay = false,
                            Weight = 12
                        },
                        new
                        {
                            Id = new Guid("4ee3ea4e-c5d5-4ae0-bbc4-1a3e7618c1c3"),
                            Name = "Sneijder",
                            Breed = "Bengal",
                            LikesToPlay = true,
                            Weight = 5
                        },
                        new
                        {
                            Id = new Guid("ec3fd5ef-455c-4d10-9241-a3824054a6e7"),
                            Name = "Santi Cazorla",
                            Breed = "Burma",
                            LikesToPlay = true,
                            Weight = 7
                        });
                });

            modelBuilder.Entity("Domain.Models.Dog", b =>
                {
                    b.HasBaseType("Domain.Models.Animal.AnimalModel");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.ToTable("AnimalModel", t =>
                        {
                            t.Property("Breed")
                                .HasColumnName("Dog_Breed");

                            t.Property("Weight")
                                .HasColumnName("Dog_Weight");
                        });

                    b.HasDiscriminator().HasValue("Dog");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c8564b38-6cbe-41fa-b271-c8e3cbd1d18c"),
                            Name = "Mertesacker",
                            Breed = "Great Dane",
                            Weight = 75
                        },
                        new
                        {
                            Id = new Guid("a26abba6-1028-48d7-a8ad-a24c06998e31"),
                            Name = "Nesta",
                            Breed = "Berner senner",
                            Weight = 35
                        },
                        new
                        {
                            Id = new Guid("1c954738-517d-4a58-a9c1-606195624b87"),
                            Name = "Saliba",
                            Breed = "Leonberger",
                            Weight = 50
                        });
                });

            modelBuilder.Entity("AnimalModelUser", b =>
                {
                    b.HasOne("Domain.Models.Animal.AnimalModel", null)
                        .WithMany()
                        .HasForeignKey("AnimalsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
